export declare const Fragment: unique symbol;
export type Props = {
    [key: string]: any;
    children?: Node[] | null;
};
export type Component = (props: Props) => Node;
export interface Node {
    nodeName: string | Component | typeof Fragment;
    attributes: Props;
    children?: Node[] | null;
}
interface Attributes {
    [key: string]: string | Record<string, string>;
}
declare function jsx(nodeName: string, attributes: Attributes, ...args: Node[]): Node;
declare namespace jsx {
    var render: (node: Node) => string;
}
export default jsx;
